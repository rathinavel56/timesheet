{"version":3,"sources":["webpack:///./src/app/projects/projects.component.html","webpack:///./src/app/projects/projects-routing.module.ts","webpack:///./src/app/projects/projects.component.scss","webpack:///./src/app/projects/projects.component.ts","webpack:///./src/app/projects/projects.module.ts"],"names":[],"mappings":"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","file":"projects-projects-module.js","sourcesContent":["module.exports = \"<div [@routerTransition]>\\n  <app-page-header [heading]=\\\"'Projects'\\\" [icon]=\\\"'fa-edit'\\\"></app-page-header>\\n  <form [formGroup]=\\\"createForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n          <div class=\\\"form-group\\\">\\n                  <label class=\\\"control-label col-sm-2\\\" >Project {{ formTypeShow }} </label>\\n                  <div class=\\\"col-sm-6\\\">\\n                          <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"name\\\"\\n                                  placeholder=\\\"Enter the text\\\"\\n                                  [ngClass]=\\\"{ 'is-invalid': formSubmitted && f.name.errors }\\\" />\\n                          <div *ngIf=\\\"formSubmitted && !!f.name?.errors\\\" class=\\\"invalid-feedback\\\">\\n                                  <div *ngIf=\\\"!!f.name?.errors.required\\\">\\n                                          Name is required\\n                                  </div>\\n                          </div>\\n                  </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n                  <label class=\\\"control-label col-sm-2\\\">Status&nbsp;&nbsp;&nbsp;<input type=\\\"checkbox\\\"\\n                                  formControlName=\\\"is_active\\\"></label>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n                  <div class=\\\"col-sm-offset-2 col-sm-6\\\">\\n                          <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>&nbsp;&nbsp;&nbsp;<button\\n                                  type=\\\"button\\\" (click)=\\\"clearForm()\\\" class=\\\"btn btn-default\\\">\\n                                  Clear\\n                          </button>\\n                  </div>\\n          </div>\\n  </form>\\n  <table id=\\\"timeSheet\\\" class=\\\"table table-striped table-bordered table100\\\">\\n          <thead>\\n                  <tr>\\n                          <td colspan=\\\"6\\\">\\n                                  <form [formGroup]=\\\"searchForm\\\" (ngSubmit)=\\\"onSearch()\\\">\\n                                          <div class=\\\"row\\\">\\n                                                  <div class=\\\"col-sm-2\\\">\\n                                                          <input type=\\\"text\\\" class=\\\"form-control\\\"\\n                                                                  formControlName=\\\"name\\\"\\n                                                                  placeholder=\\\"Enter search text\\\"\\n                                                                  [ngClass]=\\\"{ 'is-invalid': searchFormSubmitted && sf.name.errors }\\\" />\\n                                                          <div *ngIf=\\\"searchFormSubmitted && !!sf.name?.errors\\\"\\n                                                                  class=\\\"invalid-feedback\\\">\\n                                                                  <div *ngIf=\\\"!!sf.name?.errors.required\\\">\\n                                                                          Search text is required\\n                                                                  </div>\\n                                                          </div>\\n                                                  </div>\\n                                                  <div class=\\\"col-sm-4\\\">\\n                                                          <button type=\\\"submit\\\"\\n                                                                  class=\\\"btn btn-primary\\\">Search</button>&nbsp;&nbsp;&nbsp;<button\\n                                                                  type=\\\"button\\\" class=\\\"btn btn-default\\\"\\n                                                                  (click)=\\\"clearSearch()\\\">\\n                                                                  Clear Search Results\\n                                                          </button>\\n                                                  </div>\\n                                          </div>\\n                                  </form>\\n                          </td>\\n                  </tr>\\n          </thead>\\n          <tbody>\\n                  <tr>\\n                          <th>Infra Tower</th>\\n                          <th>Status</th>\\n                          <th>Action</th>\\n                  </tr>\\n                  <tr *ngFor=\\\"\\n              let project of projects\\n                  | paginate\\n                      : {\\n                            id: 'paginationControlsId',\\n                            itemsPerPage: itemPerPageIndex,\\n                            currentPage: currentPageIndex,\\n                            totalItems: totalRecords\\n                        }\\n          \\\">\\n\\n                          <td>{{ project.name }}</td>\\n                          <td>{{ project.is_active == true ? 'Active' : 'Inactive' }}</td>\\n                          <td><button type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n                                          (click)=\\\"update(project)\\\">Update</button></td>\\n                  </tr>\\n                  <tr *ngIf=\\\"!projects.length\\\">\\n                          <td colspan=\\\"6\\\">\\n                                  No Records found.\\n                          </td>\\n                  </tr>\\n          </tbody>\\n          <tfoot *ngIf=\\\"projects.length\\\">\\n                  <tr>\\n                          <td colspan=\\\"6\\\">\\n                                  <pagination-controls id=\\\"paginationControlsId\\\"\\n                                          (pageChange)=\\\"pageChanged($event)\\\" maxSize=\\\"9\\\" directionLinks=\\\"true\\\"\\n                                          autoHide=\\\"true\\\" responsive=\\\"true\\\" previousLabel=\\\"Previous\\\"\\n                                          nextLabel=\\\"Next\\\" screenReaderPaginationLabel=\\\"Pagination\\\"\\n                                          screenReaderPageLabel=\\\"page\\\">\\n                                  </pagination-controls>\\n                          </td>\\n                  </tr>\\n          </tfoot>\\n  </table>\\n</div>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProjectsComponent } from './projects.component';\n\nconst routes: Routes = [\n  {\n      path: '', component: ProjectsComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ProjectsRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2plY3RzL3Byb2plY3RzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { routerTransition } from '../router.animations';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AppConst } from '../utils/app-const';\nimport { Project } from '../api/models/project';\nimport { ToastMessage } from '../utils/toast-message';\nimport { ProjectService } from '../api/services/project.service';\n\n@Component({\n  selector: 'app-projects',\n  templateUrl: './projects.component.html',\n  styleUrls: ['./projects.component.scss'],\n  animations: [routerTransition()]\n})\nexport class ProjectsComponent implements OnInit {\n\n  public serviceResponse: any;\n  public projects: Project[] = [];\n  public itemPerPageIndex: Number;\n  public currentPageIndex: Number = 1;\n  public totalRecords: Number = 0;\n  public createForm: FormGroup;\n  public searchForm: FormGroup;\n  public formSubmitted: Boolean;\n  public searchFormSubmitted: Boolean;\n  public formTypeShow: any = 'Add';\n\n  constructor(private formBuilder: FormBuilder,\n    private projectService: ProjectService,\n    private toastMessage: ToastMessage) { }\n\n  ngOnInit() {\n    this.createFormInit();\n    this.searchFormInit();\n    this.getProjects('page=' + this.currentPageIndex);\n  }\n\n  createFormInit() {\n    this.createForm = this.formBuilder.group({\n      id: [''],\n      name: ['', Validators.required],\n      is_active: [true]\n    });\n  }\n\n  searchFormInit() {\n    this.searchForm = this.formBuilder.group({\n      name: ['', Validators.required]\n    });\n  }\n\n  get f() {\n    return this.createForm.controls;\n  }\n\n  formType(): String {\n    return (this.createForm.value.id === '') ? 'Add' : 'Update';\n  }\n\n  get sf() {\n    return this.searchForm.controls;\n  }\n\n  getProjects(params: String) {\n    this.projectService.findAll(params)\n      .subscribe(data => {\n        this.serviceResponse = data;\n        if (this.serviceResponse.status === AppConst.SERVICE_STATUS.SUCCESS) {\n          this.projects = this.serviceResponse.data;\n          this.totalRecords = this.serviceResponse.metadata.totalRecords;\n          this.itemPerPageIndex = this.serviceResponse.metadata.limit;\n        } else {\n          this.toastMessage.error(null, this.serviceResponse.statusMessage);\n        }\n      });\n  }\n\n  onSubmit() {\n    this.formSubmitted = true;\n    if (this.createForm.invalid) {\n      return;\n    }\n    if (this.createForm.value.id !== '') {\n      this.projectService.update(this.createForm)\n        .subscribe(data => {\n          this.formHandler(data);\n        });\n    } else {\n      this.projectService.create(this.createForm)\n        .subscribe(data => {\n          this.formHandler(data);\n        });\n    }\n  }\n\n  formHandler(data: any) {\n    this.serviceResponse = data;\n    if (this.serviceResponse.status === AppConst.SERVICE_STATUS.SUCCESS) {\n      this.projects = this.serviceResponse.data;\n      this.createForm.controls['id'].setValue('');\n      this.createForm.controls['name'].setValue('');\n      this.createForm.controls['is_active'].setValue(true);\n      this.getProjects('page=' + this.currentPageIndex);\n      this.toastMessage.success(null, this.serviceResponse.statusMessage);\n    } else {\n      this.toastMessage.error(null, this.serviceResponse.statusMessage);\n    }\n    this.formSubmitted = false;\n  }\n\n  update(project: Project) {\n    this.createForm.controls['id'].setValue(project._id);\n    this.createForm.controls['name'].setValue(project.name);\n    this.createForm.controls['is_active'].setValue(project.is_active);\n    this.formTypeShow = this.formType();\n    window.scroll(0, 0);\n  }\n\n  pageChanged(pageNo: any) {\n    this.currentPageIndex = pageNo;\n    this.getProjects(this.getSearchedData());\n  }\n\n  getSearchedData() {\n    const name = (this.searchForm.value.name !== '') ? (this.querParams(this.searchForm.value) + '&') : '';\n    return name + 'page=' + this.currentPageIndex;\n  }\n\n  querParams(object: Object): String {\n    return Object.entries(object).map(([key, val]) => `${key}=${val}`).join('&');\n  }\n\n  clearForm() {\n    this.formSubmitted = false;\n    this.createFormInit();\n    this.formTypeShow = this.formType();\n  }\n\n  clearSearch() {\n    this.searchFormSubmitted = false;\n    this.searchFormInit();\n    this.currentPageIndex = 1;\n    this.getProjects('page=' + this.currentPageIndex);\n  }\n\n  onSearch() {\n    this.searchFormSubmitted = true;\n    if (this.searchForm.invalid) {\n      return;\n    }\n    this.getProjects(this.getSearchedData());\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ProjectsRoutingModule } from './projects-routing.module';\nimport { ProjectsComponent } from './projects.component';\nimport { PageHeaderModule } from '../shared';\nimport { ToastMessage } from '../utils/toast-message';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { ProjectService } from '../api/services/project.service';\n\n@NgModule({\n  declarations: [ProjectsComponent],\n  imports: [\n    CommonModule,\n    PageHeaderModule,\n    ProjectsRoutingModule,\n    ReactiveFormsModule,\n    NgxPaginationModule\n  ],\n  providers: [\n    ToastMessage,\n    ProjectService\n  ]\n})\nexport class ProjectsModule { }\n"],"sourceRoot":""}